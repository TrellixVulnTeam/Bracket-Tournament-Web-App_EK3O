{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./rest.datasource\";\nexport let UserRepository = /*#__PURE__*/(() => {\n  class UserRepository {\n    constructor(dataSource) {\n      this.dataSource = dataSource;\n      this.users = [];\n      dataSource.getUsers().subscribe(user => {\n        this.users = user;\n      });\n    }\n\n    getUsers() {\n      return this.users;\n    }\n\n    getUser(id) {\n      return this.users.find(p => p._id === id);\n    }\n\n    saveUser(saveUser) {\n      if (saveUser._id === null || saveUser._id === 0 || saveUser._id === undefined) {\n        this.dataSource.addUser(saveUser).subscribe(u => {\n          this.users.push(saveUser);\n        });\n      } else {\n        this.dataSource.updateUser(saveUser).subscribe(user => {\n          this.users.splice(this.users.findIndex(u => u._id === saveUser._id), 1, saveUser);\n        });\n      }\n    }\n\n    deleteUser(userid) {\n      this.dataSource.deleteUser(userid).subscribe(user => {\n        this.users.splice(this.users.findIndex(b => b._id === userid), 1);\n      });\n    }\n\n    signup(saveUser) {\n      console.log('saveUser');\n      console.log(saveUser); //saveUser.userType = false;\n\n      this.dataSource.signup(saveUser).subscribe(u => {\n        this.users.push(saveUser);\n      });\n    }\n\n  }\n\n  UserRepository.ɵfac = function UserRepository_Factory(t) {\n    return new (t || UserRepository)(i0.ɵɵinject(i1.RestDataSource));\n  };\n\n  UserRepository.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserRepository,\n    factory: UserRepository.ɵfac\n  });\n  return UserRepository;\n})();","map":null,"metadata":{},"sourceType":"module"}